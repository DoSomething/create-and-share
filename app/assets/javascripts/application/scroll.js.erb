$(document).ready(function() {
  var page = 0;     // Default page
  var running = <%= Post.per_page %>; // How many posts are currently shown
  var done = [];
  var loaded = [];

  function in_view() {
    function load_the_scroll(elm, response) {
      returned = response.returned;
      latest = response.latest;
      seen = response.seen;
      post_ids = response.post_ids;

      // Unbind the last, last post's ID so we don't load again and again.
      elm.unbind('inview');

      if (count <= <%= Post.per_page %>) {
        $('#pagination').show();
        $('.inview').remove();
        return false;
      }

      $(response.posts).appendTo($('.post-list'));
      $('img.lazy').lazyload();

      // Remove the current inview element.  Add a new one.
      $('.inview').remove();

      // Load Facebook & Votes
      load_facebook();
      set_votes();
      admin_tools();

      if (response.die) {
        $('#pagination').show();
        return false;
      }

      $('<div></div>').addClass('inview').appendTo($('.post-list'));
      // Running count += returned count
      running += returned;
      // Only keep going if there are more posts to show.
      if (running < count) {
        in_view();
      }
      else {
        $('#pagination').show();
        $('.inview').remove();
      }
    }

    var is_page = (window.location.href.indexOf('page/') !== -1 && window.location.href.indexOf('page/1') == -1);
    if (typeof latest !== 'undefined' && count >= <%= Post.per_page %> && !is_page) {
      // Start the scroll load on the last post.  Leaves the perception of a faster infinite scroll.
      $('.id-' + latest).bind('inview', function(event, visible) {
        // Page + 1
        page++;
        var $elm = $(this);

        // Load the next scroll
        $.post('/' + campaign.path + '/posts/scroll.json', { seen: seen, filter: (typeof filter !== 'undefined' ? filter : 'index'), type: campaign.scroll_type, page: page, last: latest }, function(response) {
          load_the_scroll($elm, response);
          get_counts();
        });
      });
    }
    else {
      $('.inview').remove();
      // if (is_page) {
        $('#pagination').show();
      // }
    }
  }

  function get_counts() {
    $.post('/' + campaign.path + '/posts/get_counts.json', { post_ids: post_ids }, function(response) {
      for (i in response) {
        $('.id-' + i).find('.thumbs-up-count').text(response[i]['tu']);
        $('.id-' + i).find('.thumbs-down-count').text(response[i]['td']);
        $('.id-' + i).find('.share-count').text(response[i]['sc']);
      }
    });
  }

  // Go.
  in_view();
  if (typeof post_ids !== 'undefined') {
    get_counts();
  }
});